/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

/ {
    // Activate ADJUST layer by pressing raise and lower

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    combos {
        compatible = "zmk,combos";

        AltDelete {
            bindings = <&kp LA(BACKSPACE)>;
            key-positions = <31 32>;
        };

        tripleDelete {
            bindings = <&kp LG(BACKSPACE)>;
            key-positions = <31 32 33>;
        };

        webpageUndo {
            bindings = <&kp LS(LG(T))>;
            key-positions = <28 25>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "default";

            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&kp ESCAPE  &kp N1  &kp N2  &kp N3    &kp N4        &kp N5                                     &kp N6  &kp N7  &kp N8     &kp N9   &kp N0    &kp MINUS
&kp TAB     &kp Q   &kp W   &kp E     &kp R         &kp T                                      &kp Y   &kp U   &kp I      &kp O    &kp P     &kp SQT
&kp LCTRL   &kp A   &kp S   &kp D     &kp F         &kp G                                      &kp H   &kp J   &kp K      &kp L    &kp SEMI  &kp ENTER
&kp LSHFT   &kp Z   &kp X   &kp C     &kp V         &kp B   &kp ENTER        &kp RS(LG(LEFT))  &kp N   &kp M   &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                    &mo 4   &kp LALT  &kp LEFT_GUI  &mo 1   &kp BACKSPACE    &kp SPACE         &mo 2   &mo 3   &mo 3      &mo 4
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        lower_layer {
            display-name = "lower";

            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&kp EQUAL      &kp EXCL   &kp AT_SIGN   &kp HASH       &kp DOLLAR      &kp PERCENT                                    &kp CARET     &kp AMPS      &kp STAR      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp TILDE
&kp LG(GRAVE)  &kp LG(N)  &kp N2        &kp N3         &kp LC(TAB)     &kp RC(TAB)                                    &kp N7        &kp N8        &kp N9        &kp PLUS              &kp MINUS              &kp F12
&kp TAB        &kp LCTRL  &kp LEFT_ALT  &kp LEFT_GUI   &kp LEFT_SHIFT  &kp F12                                        &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp STAR              &kp SLASH              &kp PIPE
&trans         &kp LG(Z)  &kp LG(X)     &kp LG(C)      &kp LG(V)       &kp F11      &kp LG(LS(NUMBER_4))    &kp DOT   &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans
                          &kp SPACE     &kp RG(RA(F))  &kp LG(LA(C))   &trans       &kp F10                 &kp PLUS  &kp N0        &trans        &kp ENTER     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {
            display-name = "raise";

            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
            // |       | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
            // |       | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
            // |       | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
            //                |      |       |       |      |      |  |      |      |      |       |      |

            bindings = <
&kp F1  &kp F2      &kp F3        &kp F4        &kp F5          &kp F6                                                   &kp LESS_THAN     &kp GREATER_THAN  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACE    &kp RIGHT_BRACE
&trans  &kp INS     &kp PSCRN     &kp K_CMENU   &trans          &trans                                                   &trans            &kp LA(LEFT)      &kp UP                &kp RA(RIGHT)          &kp LG(KP_PLUS)   &kp BACKSLASH
&trans  &kp LCTRL   &kp LEFT_ALT  &kp LEFT_GUI  &kp LEFT_SHIFT  &kp CLCK                                                 &kp LS(LA(LEFT))  &kp LEFT          &kp DOWN              &kp RIGHT              &kp LG(KP_MINUS)  &kp BSPC
&trans  &kp K_UNDO  &kp K_CUT     &kp K_COPY    &kp K_PASTE     &trans    &kp LC(LA(LG(LEFT)))    &kp LA(LC(LG(RIGHT)))  &kp INS           &kp HOME          &kp END               &trans                 &trans            &trans
                    &trans        &kp LEFT_ALT  &kp LEFT_GUI    &trans    &kp BACKSPACE           &kp ENTER              &trans            &kp LG(LA(LEFT))  &kp RG(RA(RIGHT))     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        adjust_layer {
            // ----------------------------------------------------------------------------------------------------------------------------
            // | BTCLR  |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |                  |      |      |       |      |       |       |
            // | EXTPWR | RGB_HUD | RGB_HUI | RGB_SAD | RGB_SAI | RGB_EFF |                  |      |      |       |      |       |       |
            // |        | RGB_BRD | RGB_BRI |         |         |         |                  |      |      |       |      |       |       |
            // |        |         |         |         |         |         | RGB_TOG | |      |      |      |       |      |       |       |
            //                    |         |         |         |         |         | |      |      |      |       |      |

            display-name = "adjust";
            bindings = <
&bt BT_CLR         &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4                      &none   &none   &none   &none  &none                       &none
&ext_power EP_TOG  &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &rgb_ug RGB_EFF                   &none   &none   &none   &none  &none                       &none
&none              &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &none            &none            &none                             &none   &none   &none   &none  &kp LC(LG(LEFT))            &kp RC(RG(RIGHT))
&none              &none            &none            &none            &none            &none            &trans    &none  &kp F7  &kp F8  &kp F9  &none  &kp LG(LC(LS(LEFT_ARROW)))  &kp RG(RC(RS(RIGHT)))
                                    &none            &none            &none            &none            &none     &none  &none   &none   &none   &none
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
